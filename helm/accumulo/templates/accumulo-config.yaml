apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "accumulo.fullname" . }}-client-properties
  namespace: {{ .Release.Namespace }}
data:
  accumulo-client.properties: |
    auth.type=password
    auth.principal=root
    instance.name=s3test
    instance.zookeepers={{ include "accumulo.zookeeper.fullname" . }}:2181
    rpc.transport.idle.timeout=60s


---


apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "accumulo.fullname" . }}-properties
  namespace: {{ .Release.Namespace }}
data:
  accumulo.properties: |
    general.rpc.timeout=240s
    instance.secret=s3test
    instance.zookeeper.host={{ include "accumulo.zookeeper.fullname" . }}:2181
    manager.wal.closer.implementation=org.apache.accumulo.server.manager.recovery.NoOpLogCloser
    table.durability=sync
    tserver.memory.maps.native.enabled=false
    tserver.walog.max.size=512M
    tserver.port.search=true
    ## For S3 you must define volumes for accumulo and its write ahead logs. Replace the defaule instance volumes at the top
    ## with the example below. Make sure the volumes match the general.custom.volume.preferred.default, and
    ## general.custom.volume.preferred.logger property values below
    instance.volumes=s3a://accumulo/database,s3a://accumulo/wal
    ## The default deployment will use a RandomVolumeChooser and HadoopLogCloser and neither of which work when deploying to
    ## S3. Remove the comments below to use the volume chooser and log closer that are compatible with S3
    general.volume.chooser=org.apache.accumulo.core.spi.fs.PreferredVolumeChooser
    ## Define the S3 objects to use for recording accumulo and write ahead log data
    general.custom.volume.preferred.default=s3a://accumulo/database
    general.custom.volume.preferred.logger=s3a://accumulo/wal


---


apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "accumulo.fullname" . }}-logging
  namespace: {{ .Release.Namespace }}
data:
  log4j2-service.properties: |
    status = info
    dest = err
    name = AccumuloCompactorLoggingProperties
    appender.console.type = Console
    appender.console.name = STDOUT
    appender.console.target = SYSTEM_OUT
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = %d{ISO8601} [%-8c{2}] %-5p: %m%n
    appender.console.filter.threshold.type = ThresholdFilter



